using System;
using System.ComponentModel.Design;

namespace TicTacToe5x5
{
    internal class Program
    {
        const int BOARD_SIZE = 5;
        char[,] playBoard = new char[BOARD_SIZE, BOARD_SIZE];
        const char CURRENT_PLAYER_1 = 'X';
        const char CURRENT_PLAYER_2 = 'O';
        const int ZERO = 0;
        const int ONE = 1;
        const int TWO = 2;

        private static void InitializeBoard(char[,] playBoard)
        {
            for (int i = ZERO; i < BOARD_SIZE; i++)
            {
                for (int j = ZERO; j < BOARD_SIZE; j++)
                {
                    playBoard[i, j] = ' ' ;
                }
            }
        }

        private static void ShowBoard(char[,] playBoard)
        {
            Console.Clear();
            Console.WriteLine("   1  2  3  4  5");
            for (int i = ZERO; i < BOARD_SIZE; i++)
            {
                Console.Write((char)('A' + i));
                for (int j = ZERO; j < BOARD_SIZE; j++)
                {
                    Console.Write($"  {playBoard[i, j]}");
                }
                Console.WriteLine();
            }
        }

        // Проверка дали даден ход е валиден
        private bool IsMoveValid(int row, int col)
        {
            return row >= ZERO && row < BOARD_SIZE && col >= ZERO && col < BOARD_SIZE && playBoard[row, col] == ' ';
        }

        public void GamePlay()
        {
            bool gameRun = true;
            int count = 0;
          
            InitializeBoard(playBoard);
            
            while (gameRun)
            {
                ShowBoard(playBoard);
                if (count == 0 || count % 2 == 0)
                {
                    InputPlayer1(count,gameRun);
                }
                else
                {
                    InputPlayer2(count, gameRun);
                }
                if (IsBoardFull())
                {
                    ShowBoard(playBoard);
                    Console.WriteLine("Равенство!");
                    gameRun = false;
                }
                count++;
            }
        }
        public void InputPlayer1(int count ,bool gameRun)
        {
                Console.WriteLine($"Играч {CURRENT_PLAYER_1}, въведете ред и колона (например A 1):");
                try
                {
                    string[] input = Console.ReadLine().Split(' ');

                    if (input.Length != TWO || input[0].Length != ONE || !int.TryParse(input[1], out int col))
                    {
                        throw new FormatException("Невалиден вход. Моля, въведете ред и колона като буква и число, разделени с интервал.");
                    }

                    // Преобразуване на входа в индекс
                    int row = char.ToUpper(input[0][0]) - 'A';

                    if (!IsMoveValid(row, col - ONE))
                    {
                        throw new ArgumentException("Невалиден ход. Изберете свободна клетка в 5x5 дъската.");
                    }

                    playBoard[row, col - ONE] = CURRENT_PLAYER_1;

                if (CheckForWin(CURRENT_PLAYER_1))
                    {
                        ShowBoard(playBoard);
                        Console.WriteLine($"Играч {CURRENT_PLAYER_1} спечели!");
                        gameRun = false;
                    }
                }

                catch (Exception ex)
                {
                    Console.WriteLine($"Грешка: {ex.Message}");
                }
        }
        public void InputPlayer2(int count,bool gameRun)
        {

                Console.WriteLine($"Играч {CURRENT_PLAYER_2}, въведете ред и колона (например A 1):");
                try
                {
                    string[] input = Console.ReadLine().Split(' ');

                    if (input.Length != TWO || input[0].Length != ONE || !int.TryParse(input[1], out int col))
                    {
                        throw new FormatException("Невалиден вход. Моля, въведете ред и колона като буква и число, разделени с интервал.");
                    }

                    int row = char.ToUpper(input[0][0]) - 'A';

                    if (!IsMoveValid(row, col - ONE))
                    {
                        throw new ArgumentException("Невалиден ход. Изберете свободна клетка в 5x5 дъската.");
                    }

                    playBoard[row, col - ONE] = CURRENT_PLAYER_2;

  
                if (CheckForWin(CURRENT_PLAYER_2))
                    {
                        ShowBoard(playBoard);
                        Console.WriteLine($"Играч {CURRENT_PLAYER_2} спечели!");
                        gameRun = false;
                    }
                }
                catch (Exception ex)
                {
                    Console.WriteLine($"Грешка: {ex.Message}");
                }
        }

        private bool CheckForWin(char player)
        {
            for (int i = ZERO; i <= BOARD_SIZE; i++)
            {
                if (playBoard[i, 0] == player && playBoard[i, 1] == player && playBoard[i, 2] == player && playBoard[i, 3] == player && playBoard[i, 4] == player)
                {
                    return true;
                }
                if (playBoard[0, i] == player && playBoard[1, i] == player && playBoard[2, i] == player && playBoard[3, i] == player && playBoard[4, i] == player)
                {
                    return true;
                }
            }

            if (playBoard[0, 0] == player && playBoard[1, 1] == player && playBoard[2, 2] == player && playBoard[3, 3] == player && playBoard[4, 4] == player)
            {
                return true;
            }
            if (playBoard[0, 4] == player && playBoard[1, 3] == player && playBoard[2, 2] == player && playBoard[3, 1] == player && playBoard[4, 0] == player)
            {
                return true;
            }

            return false;
        }

        private bool IsBoardFull()
        {
            for (int i = ZERO; i < BOARD_SIZE; i++)
            {
                for (int j = ZERO; j < BOARD_SIZE; j++)
                {
                    if (playBoard[i, j] == ' ')
                    {
                        return false;
                    }
                }
            }
            return true;
        }


        static void Main(string[] args)
        {
            Program game = new Program();
            game.GamePlay();
        }
    }
}
